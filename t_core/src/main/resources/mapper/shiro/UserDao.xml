<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="code.oauth.shiro.mapper.UserDao">
  <resultMap id="BaseResultMap" type="code.oauth.shiro.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <resultMap id="userMap" type="code.oauth.shiro.pojo.User" extends="BaseResultMap">
    <!--<id column="uid" property="id"/>
    <result column="username" property="username"/>-->
    <!--角色信息-->
    <collection property="roles" javaType="list" ofType="code.oauth.shiro.pojo.Role">
      <id column="rid" property="id"/>
      <result column="rname" property="name"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, salt
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shiro_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shiro_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="code.oauth.shiro.pojo.User" useGeneratedKeys="true">
    insert into shiro_user (username, `password`, salt
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="code.oauth.shiro.pojo.User" useGeneratedKeys="true">
    insert into shiro_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="code.oauth.shiro.pojo.User">
    update shiro_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="code.oauth.shiro.pojo.User">
    update shiro_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shiro_user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="findRolesByUsername" parameterType="String" resultMap="userMap">
    SELECT u.id id,u.username,u.password,u.salt,r.id rid,r.NAME rname
    FROM shiro_user u
           LEFT JOIN shiro_user_role ur
                     ON u.id=ur.userid
           LEFT JOIN shiro_role r
                     ON ur.roleid=r.id
    WHERE u.username=#{username}
  </select>

  <select id="findPermsByRoleId" parameterType="integer" resultType="code.oauth.shiro.pojo.Perms">
    SELECT p.id,p.NAME,p.url,r.NAME
    FROM shiro_role r
           LEFT JOIN shiro_role_perms rp
                     ON r.id=rp.roleid
           LEFT JOIN shiro_perms p ON rp.permsid=p.id
    WHERE r.id=#{id}
  </select>
</mapper>