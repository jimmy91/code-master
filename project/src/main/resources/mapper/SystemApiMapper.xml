<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.project.mapper.SystemApiMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="app.project.entity.SystemDictDataEntity">
        <id column="id" property="id"/>
        <result column="creator" property="creator"/>
        <result column="create_time" property="createTime"/>
        <result column="updater" property="updater"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
        <result column="sort" property="sort"/>
        <result column="label" property="label"/>
        <result column="value" property="value"/>
        <result column="dict_type" property="dictType"/>
        <result column="status" property="status"/>
        <result column="color_type" property="colorType"/>
        <result column="css_class" property="cssClass"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        creator,
        create_time,
        updater,
        update_time,
        deleted,
        id, sort, label, value, dict_type, status, color_type, css_class, remark
    </sql>

   <!--
    一级缓存因为只能在同一个SqlSession中共享，所以会存在一个问题，在分布式或者多线程的环境下，
    不同会话之间对于相同的数据可能会产生不同的结果，因为跨会话修改了数据是不能互相感知的，所以就有可能存在脏数据的问题，
    正因为一级缓存存在这种不足，所以我们需要一种作用域更大的缓存，这就是二级缓存。

    Cache使用时的注意事项/避免使用二级缓存
    注意事项：

    只能在【只有单表操作】的表上使用缓存，不只是要保证这个表在整个系统中只有单表操作，而且和该表有关的全部操作必须全部在一个namespace下。
    在可以保证查询远远大于insert,update,delete操作的情况下使用缓存这一点不需要多说，所有人都应该清楚(读多写少)。记住，这一点需要保证在1的前提下才可以！
    避免使用二级缓存：

    可能会有很多人不理解这里，二级缓存带来的好处远远比不上他所隐藏的危害。
    缓存是以namespace为单位的，不同namespace下的操作互不影响。
    insert,update,delete操作会清空所在namespace下的全部缓存。
    通常使用MyBatis Generator生成的代码中，都是各个表独立的，每个表都有自己的namespace。-->
    <!--针对整个命名空间使用二级缓存，如果只针对某条查询，使用 useCache="true" -->
    <cache eviction="FIFO" flushInterval="6000" size="512" readOnly="true" />

    <select id="getTwoLevelCache" resultType="app.project.entity.SystemDictDataEntity">
        select 
        <include refid="Base_Column_List"></include>
        FROM system_dict_data
        where id = #{id}
    </select>

</mapper>