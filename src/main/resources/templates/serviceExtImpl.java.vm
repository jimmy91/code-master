package ${cfg.extPackagePre}.${cfg.service}.${cfg.serviceImpl};

import ${cfg.extPackagePre}.${cfg.service}.${table.serviceName}${cfg.classNameExt};
import ${package.ServiceImpl}.${table.serviceImplName};
import org.springframework.stereotype.Service;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;

/**
 * @Package: ${cfg.extPackagePre}.${cfg.service}.${cfg.serviceImpl}
 * @Description: <$!{table.comment}扩展服务实现类>
 * @Author: ${author}
 * @CreateDate: ${date}
 * @UpdateUser: ${author}
 * @UpdateDate: ${date}
 * @UpdateRemark: <>
 * @Version: 1.0
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
@ConditionalOnProperty(prefix = "spring.config-service", name = "enable", havingValue = "true")
public class ${table.serviceName}${cfg.serviceImplNameFix} extends ${table.serviceImplName} implements ${table.serviceName}${cfg.classNameExt} {

}
#end