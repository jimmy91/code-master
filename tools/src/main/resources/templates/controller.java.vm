package ${package.Controller};

import ${package.Entity}.${entity};
##import ${package.Service}.${table.serviceName};
import utils.generator.common.dao.vo.CommonResult;
import utils.generator.common.dao.vo.PageResult;
import utils.generator.common.dao.req.QueryBO;
import ${package.Service}.${table.serviceName};
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiImplicitParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import java.util.List;

/**
 * @description: <$!{table.comment}前端控制器>
 * @author: ${author}
 * @date: ${date}
 * @remark:
 */
#set($path=${table.name})
#set($path=$path.concat("path"))
@Api(tags = "API模块 - $!{table.comment}")
@RestController
@RequestMapping(value = "${cfg.get($path)}")
@Validated
public class ${table.controllerName} {
##    @Autowired
##    private ${table.serviceName} i${table.serviceName};
    @Autowired
    private ${table.serviceName} i${table.serviceName};

    @PostMapping("list")
    @ApiOperation(value = "分页查询", notes="$!{table.comment}")
    public CommonResult<PageResult<${entity}>> list${table.serviceName}ByPage(@Valid @RequestBody QueryBO<${entity}> query) {
         return CommonResult.success(PageResult.getResult(i${table.serviceName}.page(query.getPage(), query.initQueryWrapper())));
    }

    @GetMapping("{id}")
    @ApiOperation(value = "获取详情", notes="")
    @ApiImplicitParam(name = "id", value = "业务主键ID", required = true, dataTypeClass = Long.class)
    public CommonResult<${entity}> get${table.serviceName}Details(@PathVariable Long id) {
        return CommonResult.success(i${table.serviceName}.getById(id));
    }

    @PostMapping("save")
    @ApiOperation(value = "新增数据", notes="")
    public CommonResult<Long> save${table.serviceName}(@Valid @RequestBody ${entity} req) {
        i${table.serviceName}.save(req);
        return CommonResult.success(req.getId());
    }

    @PostMapping("update/{id}")
    @ApiOperation(value = "修改数据", notes="")
    @ApiImplicitParam(name = "id", value = "业务主键ID", required = true, dataTypeClass = Long.class)
    public CommonResult<Boolean> modify${table.serviceName}(@Valid @RequestBody ${entity} req, @PathVariable Long id) {
        req.setId(id);
        return CommonResult.success(i${table.serviceName}.updateById(req));
    }

    @PostMapping("delete")
    @ApiOperation(value = "批量删除", notes="")
    @ApiImplicitParam(name = "ids", value = "业务主键ID,多个用逗号分隔.请求参数组装在url后发送", required = true, dataTypeClass = String.class)
    public CommonResult<Boolean> batchRemove${table.serviceName}(@RequestParam(value = "ids") List<Long> ids) {
        return CommonResult.success(i${table.serviceName}.removeByIds(ids));
    }

}